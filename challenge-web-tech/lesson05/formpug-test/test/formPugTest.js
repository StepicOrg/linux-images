const assert = require("assert")
const cheerio = require('cheerio')
const pug = require('pug')
const fs = require("fs")

describe("FORM-PUG", function() {
    it("HTML FORM", function(done){
        fs.readFile("./index.html", (err, data)=> {
            if(err)
                return done(err)
            let $ = cheerio.load(data)
            let form = $("html > body > form")
            assert(form, "Exists form")
            assert(form[0].attribs["method"].toLowerCase() == "get", "form get")
            assert(form[0].attribs["action"].toLowerCase() == "submitform", "form submitform")
            let input = $("html > body > form > input")
            assert(input, "Exists input")
            assert(input.length > 0, "input array")
            assert(input[0].attribs["name"].toLowerCase() == "name", "input name")
            assert(input[1].attribs["name"].toLowerCase() == "password", "input password")
            assert(input[1].attribs["type"].toLowerCase() == "password", "input password type")
            assert(input[2].attribs["type"].toLowerCase() == "submit", "input submit")
            done()
        })
    })
    it("PUG FORM", function(done){
        fs.readFile("./demo.pug", (err, data)=> {
            if(err)
                return done(err)
            const html = pug.render(data)
            let $ = cheerio.load(html)
            let form = $("html > body > form")
            assert(form, "Exists form")
            assert(form[0].attribs["method"].toLowerCase() == "get", "form get")
            assert(form[0].attribs["action"].toLowerCase() == "submitform", "form submitform")
            let input = $("html > body > form > input")
            assert(input, "Exists input")
            assert(input.length > 0, "input array")
            assert(input[0].attribs["name"].toLowerCase() == "name", "input name")
            assert(input[1].attribs["name"].toLowerCase() == "password", "input password")
            assert(input[1].attribs["type"].toLowerCase() == "password", "input password type")
            assert(input[2].attribs["type"].toLowerCase() == "submit", "input submit")
            done()
        })
    })
    it("PUG OPTIONS 1", function(done){
        fs.readFile("./demo.pug", (err, data)=> {
            if(err)
                return done(err)
            const html = pug.render(data, {"counter": "1"})
            let $ = cheerio.load(html)
            let p = $("p")
            assert(p, "Exists form")
            assert(p, "Exists p")
            assert(p.length > 0, "p array")
            assert(p[0].children, "p has text")
            assert(p[0].children[0].data.toLowerCase() == "hello", "p textvalue")
            done()
        })
    })
    it("PUG OPTIONS 2", function(done){
        fs.readFile("./demo.pug", (err, data)=> {
            if(err)
                return done(err)
            const html = pug.render(data, {"counter": "2"})
            let $ = cheerio.load(html)
            let p = $("p")
            assert(p, "Exists form")
            assert(p, "Exists p")
            assert(p.length > 0, "p array")
            assert(p[0].children, "p has text")
            assert(p[0].children[0].data.toLowerCase() == "again", "p textvalue")
            done()
        })
    })
})